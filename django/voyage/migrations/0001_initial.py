# Generated by Django 4.2 on 2023-04-18 13:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geo', '0001_initial'),
        ('doc', '0001_initial'),
        ('past', '0001_initial'),
        ('event', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AfricanInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('possibly_offensive', models.BooleanField(default=False, help_text='Indicates that the wording used in this label might be offensive to readers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CargoType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CargoUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrewStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crew', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnslavedStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('men', models.IntegerField(blank=True, null=True)),
                ('women', models.IntegerField(blank=True, null=True)),
                ('boys', models.IntegerField(blank=True, null=True)),
                ('girls', models.IntegerField(blank=True, null=True)),
                ('infant', models.IntegerField(blank=True, null=True)),
                ('total', models.IntegerField(blank=True, null=True)),
                ('male_ratio', models.FloatField(blank=True, null=True)),
                ('female_ratio', models.FloatField(blank=True, null=True)),
                ('child_ratio', models.FloatField(blank=True, null=True)),
                ('total_ratio', models.FloatField(blank=True, null=True)),
                ('men_imp', models.IntegerField(blank=True, null=True)),
                ('women_imp', models.IntegerField(blank=True, null=True)),
                ('boys_imp', models.IntegerField(blank=True, null=True)),
                ('girls_imp', models.IntegerField(blank=True, null=True)),
                ('infant_imp', models.IntegerField(blank=True, null=True)),
                ('total_imp', models.IntegerField(blank=True, null=True)),
                ('male_ratio_imp', models.FloatField(blank=True, null=True)),
                ('female_ratio_imp', models.FloatField(blank=True, null=True)),
                ('child_ratio_imp', models.FloatField(blank=True, null=True)),
                ('total_ratio_imp', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Rig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('uid', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Rig of vessel',
                'verbose_name_plural': 'Rigs of vessel',
            },
        ),
        migrations.CreateModel(
            name='TonType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('uid', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Type of tons',
                'verbose_name_plural': 'Types of tons',
            },
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('uid', models.CharField(max_length=100, unique=True)),
                ('tonnage', models.IntegerField(blank=True, null=True, verbose_name='Tonnage of vessel')),
                ('guns_mounted', models.IntegerField(blank=True, null=True, verbose_name='Guns mounted')),
                ('year_of_construction', models.IntegerField(blank=True, null=True, verbose_name="Year of vessel's construction")),
                ('registered_year', models.IntegerField(blank=True, null=True, verbose_name="Year of vessel's registration")),
                ('tonnage_mod', models.FloatField(blank=True, null=True, verbose_name='Tonnage standardized on Britishmeasured tons 1773-1870')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ships_of_this_nationality', to='geo.place', verbose_name='Ship Nationality')),
                ('registered_place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vessels_registered_here', to='geo.place', verbose_name='Place where vessel registered')),
                ('rig', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rig_vessels', to='voyage.rig', verbose_name='Rig of Vessel')),
                ('ton_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ton_type_ships', to='voyage.tontype', verbose_name='Type of Tonnage')),
                ('vessel_construction_place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vessels_constructed_here', to='geo.place', verbose_name='Place of vessel construction')),
            ],
            options={
                'verbose_name': 'Ship',
                'verbose_name_plural': 'Ships',
            },
        ),
        migrations.CreateModel(
            name='Voyage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voyage_id', models.IntegerField(unique=True, verbose_name='Voyage ID')),
                ('voyage_in_cd_rom', models.BooleanField(blank=True, default=False, max_length=1, verbose_name='Voyage in 1999 CD-ROM?')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('dataset', models.IntegerField()),
                ('african_info', models.ManyToManyField(to='voyage.africaninfo')),
            ],
        ),
        migrations.CreateModel(
            name='VoyageGroupings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('value', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Grouping for estimating imputed slaves',
                'verbose_name_plural': 'Groupings for estimating imputed slaves',
            },
        ),
        migrations.CreateModel(
            name='VoyageCargoConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(null=True, verbose_name='The amount of cargo according to the unit')),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargo_voyage_connection', to='voyage.cargotype')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_cargo_connection', to='voyage.cargounit')),
                ('voyage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voyage_cargo_connection', to='voyage.voyage')),
            ],
            options={
                'unique_together': {('voyage', 'cargo')},
            },
        ),
        migrations.AddField(
            model_name='voyage',
            name='cargo',
            field=models.ManyToManyField(blank=True, through='voyage.VoyageCargoConnection', to='voyage.cargotype'),
        ),
        migrations.AddField(
            model_name='voyage',
            name='enslavement_relations',
            field=models.ManyToManyField(to='past.personeventconnection'),
        ),
        migrations.AddField(
            model_name='voyage',
            name='references',
            field=models.ManyToManyField(to='doc.reference'),
        ),
        migrations.AddField(
            model_name='voyage',
            name='voyage_groupings',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groupings_voyage', to='voyage.voyagegroupings', verbose_name='Voyage Groupings'),
        ),
        migrations.AddField(
            model_name='voyage',
            name='voyage_itinerary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itinerary_voyage', to='voyage.itinerary', verbose_name='Itinerary'),
        ),
        migrations.AddField(
            model_name='voyage',
            name='voyage_vessel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vessel_voyage', to='voyage.vessel', verbose_name='Vessel'),
        ),
        migrations.CreateModel(
            name='LinkedVoyages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links_to_other_voyages', to='voyage.voyage')),
                ('second', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='voyage.voyage')),
            ],
        ),
        migrations.CreateModel(
            name='ItineraryEventStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crew_died_stats', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='voyage.crewstats')),
                ('crew_living_stats', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='voyage.crewstats')),
                ('enslaved_died_stats', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='voyage.enslavedstats')),
                ('enslaved_living_stats', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='voyage.enslavedstats')),
            ],
        ),
        migrations.AddField(
            model_name='itinerary',
            name='voyage',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='voyage.voyage'),
        ),
        migrations.CreateModel(
            name='ItineraryEventConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='event.event')),
                ('event_stats', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='voyage.itineraryeventstats')),
                ('itinerary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voyage.itinerary')),
            ],
            options={
                'unique_together': {('order', 'itinerary')},
            },
        ),
    ]
